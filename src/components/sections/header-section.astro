---
const { pathname } = Astro.url;
import ThemeToggle from "../react/theme-toggle.tsx";
import githubIcon from "../../icons/socials/github-icon.tsx";
import blueSkyIcon from "../../icons/socials/bluesky-icon.tsx";
import discordIcon from "../../icons/socials/discord-icon.tsx";
import linkedInIcon from "../../icons/socials/linkedin-icon.tsx";

const navItems = [
  { href: "/", text: "Home" },
  { href: "/projects", text: "Projects" },
  { href: "/about", text: "About" },
  { href: "/blogs", text: "Blogs" },
];

const socials = [
  {
    name: "BlueSky",
    url: "https://bsky.app/profile/xhide3.bsky.social",
    icon: blueSkyIcon,
  },
  {
    name: "Discord",
    url: "https://discord.gg/364749406878171136",
    icon: discordIcon,
  },
  {
    name: "LinkedIn",
    url: "https://linkedin.com/in/xhide341",
    icon: linkedInIcon,
  },
  {
    name: "GitHub",
    url: "https://github.com/xhide341",
    icon: githubIcon,
  }
];

const isActive = (href: string) => {
  if (href === '/') {
    return pathname === href;
  }
  return pathname.startsWith(href);
};
---

<header
  class="flex justify-between w-full h-full max-w-screen-xl mx-auto px-4 lg:px-12 pb-2 lg:pb-4"
>
  <div class="flex items-center justify-between gap-4 pt-4">
    {socials.map((social) => (
      <a href={social.url} target="_blank" rel="noopener noreferrer" class="inline-flex" aria-label={`Visit ${social.name} profile (opens in new tab)`}>
        <social.icon className="w-6 h-6"/>
      </a>
    ))}
  </div>

  <!-- Right side container for nav and buttons -->
  <div class="flex items-center gap-4">
    <!-- Navigation Menu (hidden on mobile) -->
    <div id="nav-content" class="hidden lg:flex flex-row justify-between items-center gap-4 md:gap-12 h-full">
      <nav role="navigation" aria-label="Main Navigation" class="flex flex-col lg:flex-row justify-center items-center gap-4 md:gap-12 pt-2 text-md font-base h-full">
        {navItems.map(({ href, text }) => (
          <a
            href={href}
            class:list={[
              "nav-link relative text-center text-gray-800 dark:text-white",
              { active: isActive(href) }
            ]}
          >
            {text}
          </a>
        ))}
      </nav>
    </div>

    <!-- Theme Toggle and Mobile Menu Button container -->
    <div class="flex items-center gap-4 pt-2">
      <ThemeToggle client:load/>
      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="lg:hidden flex items-center"
        aria-label="Toggle menu"
      >
        <svg
          class="w-6 h-6 text-gray-800 dark:text-white"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="fixed lg:hidden inset-0 bg-white dark:bg-black transform translate-x-full transition-transform duration-300 ease-in-out z-50"
  >
    <div class="flex flex-col h-full p-4">
      <div class="flex justify-end">
        <button id="close-menu" class="p-2" aria-label="Close menu">
          <svg
            class="w-6 h-6 text-gray-800 dark:text-white"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
        </button>
      </div>
      <nav class="flex flex-col items-center gap-8 mt-8">
        {navItems.map(({ href, text }) => (
          <a
            href={href}
            class:list={[
              "nav-link relative text-center text-gray-800 dark:text-white text-xl",
              { active: isActive(href) }
            ]}
          >
            {text}
          </a>
        ))}
      </nav>
    </div>
  </div>
</header>

<script>
  function setupMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeMenuButton = document.getElementById('close-menu');
    const mobileMenu = document.getElementById('mobile-menu');
    const allNavLinks = document.querySelectorAll('.nav-link');

    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.remove('translate-x-full');
    });

    closeMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.add('translate-x-full');
    });

    // Handle navigation for all nav links (both mobile and desktop)
    allNavLinks?.forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        // Check if the link is active (current page)
        if (href === '/' ? window.location.pathname === '/' : window.location.pathname.startsWith(href || '')) {
          e.preventDefault();
          return;
        }
        
        // Close mobile menu if it's a mobile link
        if (mobileMenu?.contains(link)) {
          mobileMenu.classList.add('translate-x-full');
        }
      });
    });
  }

  setupMobileMenu();

  document.addEventListener('astro:page-load', setupMobileMenu);
</script>
